{"ast":null,"code":"var _jsxFileName = \"/Users/ruslan/Desktop/pro/react-home-work/my-app/src/App.js\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form } from \"./Form/Form\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Filter } from \"./Filter/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleFilterChange = event => {\n      this.setState({\n        filter: event.target.value\n      });\n    };\n    this.addContact = (name, number) => {\n      const {\n        contacts\n      } = this.state;\n\n      // Проверяем на дубликаты\n      if (contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n        alert(\"Этот контакт уже есть в списке!\");\n        return;\n      }\n      const newContact = {\n        id: nanoid(),\n        name,\n        number\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact]\n      }));\n    };\n    this.getFilteredContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n    this.state = {\n      filter: \"\",\n      contacts: []\n    };\n  }\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        onFilterChange: this.handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        onDeleteContact: this.deleteContact,\n        contacts: filteredContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","nanoid","Form","ContactsList","Filter","jsxDEV","_jsxDEV","App","constructor","handleFilterChange","event","setState","filter","target","value","addContact","name","number","contacts","state","some","contact","toLowerCase","alert","newContact","id","prevState","getFilteredContacts","includes","deleteContact","render","filteredContacts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onDeleteContact"],"sources":["/Users/ruslan/Desktop/pro/react-home-work/my-app/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form } from \"./Form/Form\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Filter } from \"./Filter/Filter\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filter: \"\",\n      contacts: [],\n    };\n  }\n\n  handleFilterChange = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    // Проверяем на дубликаты\n    if (\n      contacts.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(\"Этот контакт уже есть в списке!\");\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Контакты</h1>\n        <Form addContact={this.addContact} />\n\n        <h2>Поиск контактов</h2>\n        <Filter filter={filter} onFilterChange={this.handleFilterChange} />\n\n        <h2>Список контактов</h2>\n        <ContactsList\n          onDeleteContact={this.deleteContact}\n          contacts={filteredContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}